generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int          @id @default(autoincrement())
  email    String       @unique
  password String
  meetup   UserMeetup[]
  role     Role
  session  Session?

  @@map("user")
}

model UserMeetup {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @map("user_id")
  meetup   Meetup @relation(fields: [meetupId], references: [id])
  meetupId Int    @map("meetup_id")

  @@id([userId, meetupId])
  @@map("user_meetup")
}

model Meetup {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  meetingTime DateTime     @map("meeting_time")
  location    String
  tags        MeetupTag[]
  users       UserMeetup[]
  createdBy   Int          @map("created_by")

  @@map("meetup")
}

model Tag {
  id      Int         @id @default(autoincrement())
  name    String      @unique
  meetups MeetupTag[]

  @@map("tag")
}

model MeetupTag {
  meetup   Meetup @relation(fields: [meetupId], references: [id], onDelete: Cascade)
  meetupId Int    @map("meetup_id")
  tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    Int    @map("tag_id")

  @@id([meetupId, tagId])
  @@map("meetup_tag")
}

model Session {
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @unique @map("user_id")
  refreshToken String @map("refresh_token")

  @@map("sessions")
}

enum Role {
  USER
  ORGANIZER
}
